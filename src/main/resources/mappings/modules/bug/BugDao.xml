<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gx.modules.bug.dao.BugDao">
    
	<sql id="bugColumns">
		a.id AS "id",
		a.bug_version_id AS "bugVersion.id",
		bugVersion.version as "bugVersion.version",
		bugVersion.build as "bugVersion.build",
		a.bug_project_id AS "bugProject.id",
		bugProject.name as "bugProject.name",
		a.name AS "name",
		a.bug_type AS "bugType",
		a.bug_status AS "bugStatus",
		a.bug_level AS "bugLevel",
		a.bug_platform AS "bugPlatform",
		a.bug_systemAndVersion AS "bugSystemAndVersion",
		a.bug_serious AS "bugSerious",
		a.bug_frequency AS "bugFrequency",
		a.summary AS "summary",
		a.step2Reproduce AS "step2Reproduce",
		a.behavior AS "behavior",
		a.expected AS "expected",
		a.solution AS "solution",
		a.assign AS "assign",
		a.del_flag AS "delFlag",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.file AS "file",
		a.image AS "image",
		a.testerleadtext AS "testerLeadText",
		a.developerleadtext AS "developerLeadText",
		a.projectmanagertext AS "projectManagerText",
		a.proc_ins_id
	</sql>
	
	<sql id="bugJoins">
		LEFT JOIN bug_version bugVersion ON bugVersion.id = a.bug_version_id
		LEFT JOIN bug_project bugProject ON bugProject.id = a.bug_project_id
	</sql>
    
	<select id="get" resultType="Bug">
		SELECT 
			<include refid="bugColumns"/>
		FROM bug a
		<include refid="bugJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="getByProcInsId" resultType="Bug">
		SELECT
		<include refid="bugColumns"/>
		FROM bug a
		<include refid="bugJoins"/>
		WHERE a.proc_ins_id = #{procInsId}
	</select>

	<select id="getApplyUser" resultType="User">
			select
			u.id as id,
			u.name as name,
			u.login_name as loginName
		from sys_user as u
	  	left join bug b on b.create_by = u.id
	  	where b.proc_ins_id=#{procInsId}

	</select>
	
	<select id="findList" resultType="Bug">
		SELECT 
			<include refid="bugColumns"/>
		FROM bug a
		<include refid="bugJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="bugVersion != null and bugVersion.id != null and bugVersion.id != ''">
				AND a.bug_version_id = #{bugVersion.id}
			</if>
			<if test="bugProject != null and bugProject.id != null and bugProject.id != ''">
				AND a.bug_project_id = #{bugProject.id}
			</if>
			<if test="bugType != null and bugType != ''">
				AND a.bug_type = #{bugType}
			</if>
			<if test="bugStatus != null and bugStatus != ''">
				AND a.bug_status = #{bugStatus}
			</if>
			<if test="bugLevel != null and bugLevel != ''">
				AND a.bug_level = #{bugLevel}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Bug">
		SELECT 
			<include refid="bugColumns"/>
		FROM bug a
		<include refid="bugJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO bug(
			id,
			bug_project_id,
			bug_version_id,
			name,
			bug_platform,
			bug_systemandversion,
			bug_type,
			bug_level,
			bug_serious,
			bug_frequency,
			summary,
			step2reproduce,
			behavior,
			expected,
			image,
			file,
			remarks,
			bug_status,
			assign,
			del_flag,
			create_by,
			create_date,
			update_by,
			update_date
		) VALUES (
			#{id},
			#{bugProject.id},
			#{bugVersion.id},
			#{name},
			#{bugPlatform},
			#{bugSystemAndVersion},
			#{bugType},
			#{bugLevel},
			#{bugSerious},
			#{bugFrequency},
			#{summary},
			#{step2Reproduce},
			#{behavior},
			#{expected},
			#{image},
			#{file},
			#{remarks},
			#{bugStatus},
			#{assign},
			#{delFlag},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate}
		)
	</insert>
	
	<update id="update">
		UPDATE bug SET
			bug_project_id=#{bugProject.id},
			bug_version_id=#{bugVersion.id},
			name=#{name},
			bug_platform=#{bugPlatform},
			bug_systemandversion=#{bugSystemAndVersion},
			bug_type=#{bugType},
			bug_level=#{bugLevel},
			bug_serious=#{bugSerious},
			bug_frequency=#{bugFrequency},
			summary=#{summary},
			step2reproduce=#{step2Reproduce},
			behavior=#{behavior},
			expected=#{expected},
			image=#{image},
			file=#{file},
			remarks=#{remarks},
			bug_status=#{bugStatus},
			assign=#{assign},
			del_flag=#{delFlag},
			create_by=#{createBy.id},
			create_date=#{createDate},
			update_by=#{updateBy.id},
			update_date=#{updateDate}
		WHERE id = #{id}
	</update>

	<update id="completeBugTask">
		UPDATE bug SET
		bug_status=#{bugStatus},
		assign=#{assign},
		update_by = #{updateBy.id},
		update_date = #{updateDate}
		WHERE id = #{id}
	</update>

	<update id="solutionBug">
		UPDATE bug SET
		bug_status=#{bugStatus},
		assign=#{assign},
		solution=#{solution},
		update_by = #{updateBy.id},
		update_date = #{updateDate}
		WHERE id = #{id}
	</update>


	<update id="updateInsId">
		UPDATE bug SET
		proc_ins_id = #{procInsId},
		update_by = #{updateBy.id},
		update_date = #{updateDate}
		WHERE id = #{id}
	</update>

	<update id="updateTesterLeadText">
		UPDATE bug SET
		bug_status=#{bugStatus},
		assign=#{assign},
		testerleadtext = #{testerLeadText},
		update_by = #{updateBy.id},
		update_date = #{updateDate}
		WHERE id = #{id}
	</update>

	<update id="updateDeveloperLeadText">
		UPDATE bug SET
		bug_status=#{bugStatus},
		assign=#{assign},
		developerleadtext = #{developerLeadText},
		update_by = #{updateBy.id},
		update_date = #{updateDate}
		WHERE id = #{id}
	</update>

	<update id="updateProjectManagerText">
		UPDATE bug SET
		bug_status=#{bugStatus},
		assign=#{assign},
		projectmanagertext = #{projectManagerText},
		update_by = #{updateBy.id},
		update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM bug
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE bug SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="Bug" statementType="STATEMENT">
		select * FROM bug  where ${propertyName} = '${value}'
	</select>



	<!--<update id="updateTesterLeadText">-->
		<!--UPDATE bug SET-->
		<!--testerLeadText = #{testerLeadText},-->
		<!--update_by = #{updateBy.id},-->
		<!--update_date = #{updateDate}-->
		<!--WHERE id = #{id}-->
	<!--</update>-->

	<!--<update id="updateDeveloperLeadText">-->
		<!--UPDATE bug SET-->
		<!--developerLeadText = #{developerLeadText},-->
		<!--update_by = #{updateBy.id},-->
		<!--update_date = #{updateDate}-->
		<!--WHERE id = #{id}-->
	<!--</update>-->

	<!--<update id="updateProjectManagerText">-->
		<!--UPDATE bug SET-->
		<!--projectManagerText = #{projectManagerText},-->
		<!--update_by = #{updateBy.id},-->
		<!--update_date = #{updateDate}-->
		<!--WHERE id = #{id}-->
	<!--</update>-->
</mapper>