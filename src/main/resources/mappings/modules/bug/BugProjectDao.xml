<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gx.modules.bug.dao.BugProjectDao">
    
	<sql id="bugProjectColumns">
		a.id AS "id",
		a.name AS "name",
		a.summary AS "summary",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.remarks AS "remarks",
		u.name as "createBy.name"
	</sql>
	
	<sql id="bugProjectJoins">
		LEFT JOIN sys_user u ON u.id = a.create_by

	</sql>
	<!--LEFT JOIN sys_user joinUser on joinUser-->
	<select id="get" resultType="BugProject">
		SELECT 
			<include refid="bugProjectColumns"/>
		FROM bug_project a
		<include refid="bugProjectJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="getName" resultType="String">
		SELECT
			a.name
		FROM bug_project a
		WHERE a.id = #{id}
	</select>


	
	<select id="findList" resultType="BugProject">
		SELECT 
			<include refid="bugProjectColumns"/>
		FROM bug_project a
		<include refid="bugProjectJoins"/>
		<!--我的项目-->
		<if test="isSelf">
			JOIN bug_project_user pu ON pu.project_id = a.id
			AND pu.user_id=#{currentUser.id}
		</if>
		<where>

			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>


	<!--查找用户参与的项目-->
	<select id="findJoinList" resultType="BugProject" >

		SELECT
		`bug_project`.`id`,
		`bug_project`.`name`
		FROM
		`sys_user`
		JOIN `bug_project_user`
		ON `sys_user`.`id` = `bug_project_user`.`user_id`
		JOIN `bug_project`
		ON `bug_project_user`.`project_id` = `bug_project`.`id`
		WHERE
	</select>


	<select id="findAllList" resultType="BugProject">
		SELECT 
			<include refid="bugProjectColumns"/>
		FROM bug_project a
		<include refid="bugProjectJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO bug_project(
			id,
			name,
			summary,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			remarks
		) VALUES (
			#{id},
			#{name},
			#{summary},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{remarks}
		)
	</insert>
	
	<update id="update">
		UPDATE bug_project SET 	
			name = #{name},
			summary = #{summary},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM bug_project
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE bug_project SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="BugProject" statementType="STATEMENT">
		select * FROM bug_project  where ${propertyName} = '${value}'
	</select>

	<!--select b.id,b.bug_status as bugStatus,count(b.id) as newNum-->
	<!--from bug b-->
	<!--where b.bug_project_id=#{projectId}-->
	<!--GROUP BY b.bug_status ;-->
	<!--查询7天内指定 Bug 类型的数量-->
	<select id="totalProjectByDay" resultType="Charts">

		select
				date_format(b.update_date,'%Y-%m-%d') as 'dayStr',
				count(id) as value

		from bug b
		where date_format(b.update_date,'%Y-%m-%d')>=DATE_FORMAT(DATE_ADD(sysdate(),INTERVAL -#{day} day),'%Y-%m-%d')
		and b.bug_status=#{status}
		and b.bug_project_id=#{projectId}
		group by date_format(b.update_date,'%Y-%m-%d')

	</select>

	<select id="totalBugStatus" resultType="Charts">

		select count(id) as value
		from bug b
		WHERE b.bug_project_id=#{projectId}
		AND b.bug_status=#{status}
	</select>
	<!--select count(*),DATE_FORMAT(a.insert_time,'%e') as e from table a-->
	<!--where DATE_FORMAT(a.insert_time,'%m')='08'-->
	<!--group by e-->



	<select id="getProjectPeople" resultType="User">

		select
			su.`photo` as photo,
			su.name as name
from sys_user su
left join `bug_project_user` bpu on bpu.`user_id`=su.id
left join `bug_project` bp on bpu.`project_id`=bp.id
where bp.id=#{bugProject.id}
	</select>

</mapper>